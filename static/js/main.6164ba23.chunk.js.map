{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","data","undefined","laodData","axios","get","then","r","setState","catch","json_data","prepareData","key","name","labels","map","e","datetime","replace","datasets","label","this","className","tabIndex","src","alt","style","backgroundColor","exact","to","activeClassName","path","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6164ba23.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { HashRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport json_data from \"./json_data.json\";\n\nexport default class App extends Component {\n  state = {\n    data: undefined,\n  };\n\n  componentDidMount() {\n    this.laodData();\n  }\n\n  laodData = () => {\n    axios\n      .get(\"http://localhost:5000/all_info/\")\n      .then((r) => this.setState({ data: r.data }))\n      .catch(() => this.setState({ data: json_data }));\n  };\n\n  prepareData = (key, name) => {\n    if (this.state.data) {\n      const labels = this.state.data.map((e) =>\n        e.datetime.replace(\"T\", \" \").replace(\"00:00\", \"00\")\n      );\n      const dataset = this.state.data.map((e) => e[key]);\n      const chartData = { labels, datasets: [{ label: name, data: dataset }] };\n      return chartData;\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <nav className=\"menu\" tabIndex=\"0\">\n            <header className=\"avatar\">\n              <img\n                src=\"https://i.pinimg.com/originals/9d/a9/f6/9da9f660f03829f70f97b54f28900756.png\"\n                alt=\"image\"\n              />\n              <h2>Dashboard</h2>\n            </header>\n\n            <ul className=\"list-unstyled\" style={{ backgroundColor: \"transparent\" }}>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  exact\n                  to=\"/\"\n                  activeClassName=\"fw-bold\"\n                >\n                  Main\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/CO2\"\n                  activeClassName=\"fw-bold\"\n                >\n                  CO2\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/air_moisture_percent\"\n                  activeClassName=\"fw-bold\"\n                >\n                  Air Moisture %\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/air_quality_index\"\n                  activeClassName=\"fw-bold\"\n                >\n                  Air quality index\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/elevators_in_use_avg\"\n                  activeClassName=\"fw-bold\"\n                >\n                  Elevators in use [%]\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/inside_temperature\"\n                  activeClassName=\"fw-bold\"\n                >\n                  Inside temperature\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/outside_temperature\"\n                  activeClassName=\"fw-bold\"\n                >\n                  Outside temperature\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/people_count\"\n                  activeClassName=\"fw-bold\"\n                >\n                  People count\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/power_usage\"\n                  activeClassName=\"fw-bold\"\n                >\n                  Power usage\n                </NavLink>\n              </li>\n              <li className=\"py-1 px-3\">\n                <NavLink\n                  className=\"text-light text-decoration-none\"\n                  to=\"/solar_panel_generation\"\n                  activeClassName=\"fw-bold\"\n                >\n                  Solar panel generat\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"container text-dark\">\n            {this.state.data ? (\n              <Switch>\n                <Route exact path=\"/\">\n                  <div className=\"row\">\n                    <div className=\"col-12 col-lg-6\">\n                      <Line data={this.prepareData(\"CO2\", \"CO2\")} />\n                    </div>\n                    <div className=\"col-12 col-lg-6\">\n                      <Line data={this.prepareData(\"air_moisture_percent\", \"Air Moisture %\")} />\n                    </div>\n                    <div className=\"col-12 col-lg-6\">\n                      <Line data={this.prepareData(\"air_quality_index\", \"Air quality index\")} />\n                    </div>\n\n                    <div className=\"col-12 col-lg-6\">\n                      <Line\n                        data={this.prepareData(\"elevators_in_use_avg\", \"Elevators in use [avg]\")}\n                      />\n                    </div>\n                    <div className=\"col-12 col-lg-6\">\n                      <Line data={this.prepareData(\"inside_temperature\", \"Inside temperature\")} />\n                    </div>\n                    <div className=\"col-12 col-lg-6\">\n                      <Line data={this.prepareData(\"outside_temperature\", \"Outside temperature\")} />\n                    </div>\n\n                    <div className=\"col-12 col-lg-6\">\n                      <Line data={this.prepareData(\"people_count\", \"People count\")} />\n                    </div>\n                    <div className=\"col-12 col-lg-6\">\n                      <Line data={this.prepareData(\"power_usage\", \"Power usage\")} />\n                    </div>\n                    <div className=\"col-12 col-lg-6\">\n                      <Line\n                        data={this.prepareData(\"solar_panel_generation\", \"Solar panel generation\")}\n                      />\n                    </div>\n                  </div>\n                </Route>\n\n                <Route path=\"/CO2\">\n                  <Line data={this.prepareData(\"CO2\", \"CO2\")} />\n                </Route>\n                <Route path=\"/air_moisture_percent\">\n                  <Line data={this.prepareData(\"air_moisture_percent\", \"Air Moisture %\")} />\n                </Route>\n                <Route path=\"/air_quality_index\">\n                  <Line data={this.prepareData(\"air_quality_index\", \"Air quality index\")} />\n                </Route>\n\n                <Route path=\"/elevators_in_use_avg\">\n                  <Line data={this.prepareData(\"elevators_in_use_avg\", \"Elevators in use [avg]\")} />\n                </Route>\n                <Route path=\"/inside_temperature\">\n                  <Line data={this.prepareData(\"inside_temperature\", \"Inside temperature\")} />\n                </Route>\n                <Route path=\"/outside_temperature\">\n                  <Line data={this.prepareData(\"outside_temperature\", \"Outside temperature\")} />\n                </Route>\n\n                <Route path=\"/people_count\">\n                  <Line data={this.prepareData(\"people_count\", \"People count\")} />\n                </Route>\n                <Route path=\"/power_usage\">\n                  <Line data={this.prepareData(\"power_usage\", \"Power usage\")} />\n                </Route>\n                <Route path=\"/solar_panel_generation\">\n                  <Line\n                    data={this.prepareData(\"solar_panel_generation\", \"Solar panel generation\")}\n                  />\n                </Route>\n              </Switch>\n            ) : null}\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}